
$mobile-breakpoint: 47.99em;

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  color: inherit;
  vertical-align: baseline;

  &::before,
  &::after {
    box-sizing: border-box;
  }
}

// ::-webkit-scrollbar {
//   width: 3px;
// }

// ::-webkit-scrollbar-track {
//   background: $white;
// }

// ::-webkit-scrollbar-thumb {
//   background: $black;
// }

// ::-webkit-scrollbar-thumb:hover {
//   background: $accent;
// }

html {
  box-sizing: inherit;
  overflow-x: hidden;
  scroll-behavior: smooth;
  height: 100%;
}

body {
  @include size(p);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  color: $black;
  font-family: $font-body;
  line-height: $base-line-height;

  background-color: $smoke;
}

main {
  transition: .4s ease-in;

  &::before {
    background-color: $white;
  }

  &.active {
    transform: translate(-100vw, 0);
    opacity: 0.4;
  }
}

header {
  height: 100%;
  min-height: 100%;
  // The following is now not needed anymore and was in fact problematic on mobile ðŸŽ‰
  // height: 100vh; 
  // height: calc(var(--vh, 1vh) * 100); // --vh calculated by JS on each resize
  background-color: $white;

  div {
    z-index: 101;
  }

  img {
    // max-height: $vertical-rhythm * 6;
    // max-width: 100%;
    height: auto;
    // Actually not needed, but in case some CSS is overwritten for bad:
    object-fit: contain;
  }

  h1 {
    font-family: $font-header;
  }
}

footer {
  height: $vertical-rhythm * 7;
  background-color: $black;
}

.container {
  max-width: 43.75rem; // 700px
  margin: auto;
  padding: $vertical-rhythm * 4 0 $vertical-rhythm * 4;
}

@media (max-width: 25em) {
  body .container {
    padding: $vertical-rhythm * 4 $vertical-rhythm;
  }
}

@media (max-width: $mobile-breakpoint) {
  body .container {
    padding: $vertical-rhythm * 4 $vertical-rhythm;
  }

  .mobile-hidden {
    visibility: hidden;
  }
}

footer {
  padding-bottom: 1em;
  .icon {
    margin-top: 1em;
    margin-bottom: 1em;
    font-size: 2em;
  }
  a > .icon {
    color: $white;
  }
}